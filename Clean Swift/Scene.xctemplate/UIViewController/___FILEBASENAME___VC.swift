//
//  ___FILENAME___
//  ___PROJECTNAME___
//
//  Created by ___FULLUSERNAME___ on ___DATE___.
//  Copyright (c) ___YEAR___ ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ___VARIABLE_sceneName___DisplayLogic: class {

    func displaySomething(viewModel: ___VARIABLE_sceneName___.Something.ViewModel)
}

class ___VARIABLE_sceneName___VC: UIViewController {

    var interactor: ___VARIABLE_sceneName___BusinessLogic?
    var router: ___VARIABLE_sceneName___RoutingLogic?

    // MARK: Object lifecycle

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)

        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)

        setup()
    }

    // MARK: Setup

    private func setup() {
        let viewController = self
        let interactor = ___VARIABLE_sceneName___Interactor()
        let presenter = ___VARIABLE_sceneName___Presenter()
        let router = ___VARIABLE_sceneName___Router()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        presenter.router = router
        router.viewController = viewController
        router.interactor = interactor
    }

    // MARK: Routing
    override func prepare(for segue: UIStoryboardSegue, sender _: Any?) {
        router?.prepareForSegue(segue: segue)
    }

    // MARK: View lifecycle

    override func viewDidLoad() {
        super.viewDidLoad()

        doSomething()
    }

    // MARK: Do something

    func doSomething() {
        interactor?.doSomething()
    }
}

extension ___VARIABLE_sceneName___VC: ___VARIABLE_sceneName___DisplayLogic {

    func displaySomething(viewModel _: ___VARIABLE_sceneName___.Something.ViewModel) {
//       nameTextField.text = viewModel.name
    }
}
